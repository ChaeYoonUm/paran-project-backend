plugins {
	id 'java'
	//id 'org.springframework.boot' version '3.0.4'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

tasks.named("bootJar") {
	archiveClassifier = 'boot'
}

tasks.named("jar") {
	archiveClassifier = ''
}

tasks.named("jar") {
	enabled = false
}


// implementation : 보안에 더 강함
// compile은 springboot 3.0 버전부터 권자하지 않는다고 함
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.13.2'
	implementation 'org.projectlombok:lombok' //롬복 : Getter, Setter, 기본생성자, toString 등을 어노테이션으로 자동 생성
	annotationProcessor('org.projectlombok:lombok:')

	//Spring Data Jpa 적용
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //스프링 부트용 Spring Data Jpa 추상화 라이브러리, 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전 관리
	implementation 'com.h2database:h2' // 인메모리 관계형 데이터베이스, 프로젝트 의존성만으로 관리 가능, 메모리에서 실행 -> 재시작할 때마다 초기화되기 때문에 테스트 용도로 많이 쓰임
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//MariaDB
	implementation 'org.mariadb.jdbc:mariadb-java-client'


	//mySQL 연동
	//implementation 'mysql:mysql-connector-java:8.0.3'
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Firebase 연동
	//implementation group: 'com.google.firebase', name: 'firebase-admin', version: '8.1.0'

	//webSocket & Stomp
	/*implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:sockjs-client:1.0.2'
	implementation 'org.webjars:stomp-websocket:2.3.3'
	implementation 'org.webjars:bootstrap:3.3.7'
	implementation 'org.webjars:jquery:3.1.1-1'*/

	//json 설정
	/*implementation "com.fasterxml.jackson.core:jackson-core:2.9.9"
	implementation "com.fasterxml.jackson.core:jackson-annotations:2.9.9"
	implementation "com.fasterxml.jackson.core:jackson-databind:2.9.9"
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9"*/

	//OAuth
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

tasks.named('test') {
	useJUnitPlatform()
}
